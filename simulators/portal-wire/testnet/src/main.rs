use jsonrpc::arg;
use testnet::hivesim::{NodeInfoResponse, Simulation, Suite, Test, TestSpec};

#[tokio::main]
async fn main() {
    tracing_subscriber::fmt::init();
    let mut suite = Suite {
        name: "portal-testnet".to_string(),
        description: "Collection of different testnet compositions and assertions".to_string(),
        tests: vec![],
    };

    suite.add(TestSpec {
        name: "offer-accept".to_string(),
        description: "Test portal wire OFFER/ACCEPT messages".to_string(),
        always_run: false,
        run: test_offer_accept,
    });

    let sim = Simulation::new();
    run_suite(sim, suite).await;
}

async fn run_suite(host: Simulation, suite: Suite) {
    let name = suite.clone().name;
    let description = suite.clone().description;

    let suite_id = host.start_suite(name, description, "".to_string()).await;

    for test in &suite.tests {
        test.run_test(host.clone(), suite_id, suite.clone()).await;
    }

    host.end_suite(suite_id).await;
}

fn test_offer_accept(test: Test) {
    futures::executor::block_on(offer_accept_impl(test));
}

async fn offer_accept_impl(test: Test) {
    let content_key = "0x00720704f3aa11c53cf344ea069db95cecb81ad7453c8f276b2a1062979611f09c";
    let content_value = "0xf90222a02c58e3212c085178dbb1277e2f3c24b3f451267a75a234945c1581af639f4a7aa058a694212e0416353a4d3865ccf475496b55af3a3d3b002057000741af9731919400192fb10df37c9fb26829eb2cc623cd1bf599e8a067a9fb631f4579f9015ef3c6f1f3830dfa2dc08afe156f750e90022134b9ebf6a018a2978fc62cd1a23e90de920af68c0c3af3330327927cda4c005faccefb5ce7a0168a3827607627e781941dc777737fc4b6beb69a8b139240b881992b35b854eab9010000200000400000001000400080080000000000010004010001000008000000002000110000000000000090020001110402008000080208040010000000a8000000000000000000210822000900205020000000000160020020000400800040000000000042080000000400004008084020001000001004004000001000000000000001000000110000040000010200844040048101000008002000404810082002800000108020000200408008000100000000000000002020000b00010080600902000200000050000400000000000000400000002002101000000a00002000003420000800400000020100002000000000000000c00040000001000000100187327bd7ad3116ce83e147ed8401c9c36483140db184627d9afa9a457468657265756d50504c4e532f326d696e6572735f55534133a0f1a32e24eb62f01ec3f2b3b5893f7be9062fbf5482bc0d490a54352240350e26882087fbb243327696851aae1651b6f90222a02c58e3212c085178dbb1277e2f3c24b3f451267a75a234945c1581af639f4a7aa058a694212e0416353a4d3865ccf475496b55af3a3d3b002057000741af9731919400192fb10df37c9fb26829eb2cc623cd1bf599e8a067a9fb631f4579f9015ef3c6f1f3830dfa2dc08afe156f750e90022134b9ebf6a018a2978fc62cd1a23e90de920af68c0c3af3330327927cda4c005faccefb5ce7a0168a3827607627e781941dc777737fc4b6beb69a8b139240b881992b35b854eab9010000200000400000001000400080080000000000010004010001000008000000002000110000000000000090020001110402008000080208040010000000a8000000000000000000210822000900205020000000000160020020000400800040000000000042080000000400004008084020001000001004004000001000000000000001000000110000040000010200844040048101000008002000404810082002800000108020000200408008000100000000000000002020000b00010080600902000200000050000400000000000000400000002002101000000a00002000003420000800400000020100002000000000000000c00040000001000000100187327bd7ad3116ce83e147ed8401c9c36483140db184627d9afa9a457468657265756d50504c4e532f326d696e6572735f55534133a0f1a32e24eb62f01ec3f2b3b5893f7be9062fbf5482bc0d490a54352240350e26882087fbb243327696851aae1651b6f90222a02c58e3212c085178dbb1277e2f3c24b3f451267a75a234945c1581af639f4a7aa058a694212e0416353a4d3865ccf475496b55af3a3d3b002057000741af9731919400192fb10df37c9fb26829eb2cc623cd1bf599e8a067a9fb631f4579f9015ef3c6f1f3830dfa2dc08afe156f750e90022134b9ebf6a018a2978fc62cd1a23e90de920af68c0c3af3330327927cda4c005faccefb5ce7a0168a3827607627e781941dc777737fc4b6beb69a8b139240b881992b35b854eab9010000200000400000001000400080080000000000010004010001000008000000002000110000000000000090020001110402008000080208040010000000a8000000000000000000210822000900205020000000000160020020000400800040000000000042080000000400004008084020001000001004004000001000000000000001000000110000040000010200844040048101000008002000404810082002800000108020000200408008000100000000000000002020000b00010080600902000200000050000400000000000000400000002002101000000a00002000003420000800400000020100002000000000000000c00040000001000000100187327bd7ad3116ce83e147ed8401c9c36483140db184627d9afa9a457468657265756d50504c4e532f326d696e6572735f55534133a0f1a32e24eb62f01ec3f2b3b5893f7be9062fbf5482bc0d490a54352240350e26882087fbb243327696851aae1651b6";

    // 1. Run trin client and store content
    let trin = test.start_client("trin".to_string()).await;
    let params = [arg(content_key), arg(content_value)];
    let request = trin.rpc.build_request("portal_historyStore", &params);
    let response = trin.rpc.send_request(request).unwrap();
    println!("Store result: {:?}", response);

    // 2. Run FLuffy  client and get enr
    let fluffy = test.start_client("fluffy".to_string()).await;
    let request = fluffy.rpc.build_request("discv5_nodeInfo", &[]);
    let response = fluffy.rpc.send_request(request).unwrap();
    // let resp= client.rpc.request("web3_clientVersion", params).await.unwrap();
    let result = response.result.unwrap();
    let result: NodeInfoResponse = serde_json::from_str(result.get()).unwrap();
    let fluffy_enr = result.node_ENR;
    println!("Target ENR: {}", fluffy_enr);

    // 3. Send offer from Trin to Trin
    let params = [arg(fluffy_enr), arg([content_key])];
    let request = trin.rpc.build_request("portal_historySendOffer", &params);
    let response = trin.rpc.send_request(request).unwrap();
    println!("Send offer result: {response:?}");

    // 4. CHeck that fluffy stored the accepted content
    // tokio::time::sleep(Duration::from_millis(1000)).await;
    // let params = [arg(content_key)];
    // let request = fluffy.rpc.build_request("portal_historyLocalContent", &params);
    // let response = fluffy.rpc.send_request(request).unwrap();
    // let result = response.result.unwrap();
    // println!("Check content result: {result}");

    println!("Hello offer/accept");
}
